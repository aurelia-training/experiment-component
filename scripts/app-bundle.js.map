{"version":3,"sources":["app.ts","environment.ts","main.ts","au-components/input-currency.ts","au-components/input-date.ts","resources/index.ts","/home/jon/Documents/github/aurelia-training/experiment-components/src/app.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/input-currency.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/input-date.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {bindable, customElement} from \"aurelia-framework\";\n\n@customElement(\"au-input-currency\")\nexport class InputCurrency {\n  \n  @bindable unformattedValue:string = \"3426.1179\";\n  formattedValue:string;\n\n  unformattedValueChanged(newValue, oldValue) {\n    let match = /(\\d+)(\\.\\d+)?/.exec(newValue);\n    if(match == null) {\n      this.formattedValue = \"Invalid number\";\n      return;\n    }\n\n    // round after two decimal places\n    let afterDecimal = parseFloat(match[2] || \"0\").toFixed(2);\n\n    // add commas at spacing 3\n    let beforeDecimal = match[1];\n    for(let i = beforeDecimal.length-3; i > 0; i -= 3) {\n      beforeDecimal = beforeDecimal.slice(0, i) + \",\" + beforeDecimal.slice(i);\n    }\n\n    // concatenate everything back together again\n    this.formattedValue = \"$\" + beforeDecimal + afterDecimal.toString().slice(1);\n  }\n\n  constructor() {\n    this.unformattedValueChanged(this.unformattedValue, null);\n  }\n  \n}\n","import {bindable, customElement} from \"aurelia-framework\";\n\n@customElement(\"au-input-date\")\nexport class InputDate {\n\n  dateObject:Date = new Date();\n  @bindable dateString:string = this.dateObject.toJSON().slice(0, 10);\n  dateMMDDYYYY:string;\n  dateDDMM:string;\n  dateYYYY:string;\n\n  dateStringChanged(newValue, oldValue) {\n    this.dateObject = new Date(newValue);\n    let date = (\"0\" + this.dateObject.getDate()).slice(-2);\n    let month = (\"0\" + (this.dateObject.getMonth() + 1)).slice(-2); // month is zero-indexed\n    let year = this.dateObject.getFullYear();\n\n    this.dateMMDDYYYY = month + \"/\" + date + \"/\" + year;\n    this.dateDDMM = date + \" \" + month;\n    this.dateYYYY = \"\" + year;\n  }\n\n  constructor() {\n    this.dateStringChanged(this.dateString, null);\n  }\n\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null],"sourceRoot":"../src"}