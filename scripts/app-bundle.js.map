{"version":3,"sources":["app.ts","environment.ts","main.ts","au-components/di-experiment.ts","au-components/input-currency.ts","au-components/input-date.ts","resources/index.ts","/home/jon/Documents/github/aurelia-training/experiment-components/src/app.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/di-experiment.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/input-currency.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/input-date.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {bindable} from \"aurelia-framework\";\n\nexport class App {\n  whenPaid:Date = new Date();\n  amountPaid:number = 237.47;\n\n  testDataItem:string = \"TEST DEPENDENCY INJECTION\";\n\n  @bindable data = {\n    number1: -532.12,\n    number2: 2321.32,\n    number3: 321.24,\n    number5: 0,\n    number6: -Math.PI;\n  };\n  dataKeys = Object.keys(this.data);\n  dataChanged() {\n    this.dataKeys = Object.keys(this.data);\n  }\n  isDisabled = false;\n  hasCurrencySymbol = true;\n  dataName = \"number1\";\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {customElement, inject} from \"aurelia-framework\";\nimport {App} from \"../app\";\n\n@customElement(\"au-di-experiment\")\n@inject(App)\nexport class DiExperiment {\n  formattedTestDataItem:string;\n\n  constructor(public app:App) {\n    this.formattedTestDataItem = \"*** \" + this.app.testDataItem + \" ***\";\n  }\n}\n","import {bindable, customElement} from \"aurelia-framework\";\n\n@customElement(\"au-input-currency\")\nexport class InputCurrency {\n  \n  // internal numerical data\n  @bindable\n  public data:number;\n\n  // value to be displayed (formatted string)\n  @bindable\n  private externalValue:string;\n\n  // if the number is non-numerical\n  private error:boolean = false;\n\n  // input element reference\n  private inputElement:HTMLInputElement;\n\n  // regex to test for non-numerical characters (anything that is not a digit, a period, or a negative sign)\n  private static nonNumericRegex:RegExp = /[^\\-0-9\\.]/g;\n\n  // disabled check\n  @bindable\n  public disabled:boolean;\n\n  // has currency symbol or not\n  @bindable\n  public currencySymbol:boolean;\n\n  // setup data and disabled\n  dataChanged() {\n    if(this.inputElement === undefined) {\n      return;\n    }\n    this.inputElement.value = this.format(this.data);\n    this.validate();\n  }\n  disabledChanged() {\n    if(this.inputElement === undefined) {\n      return;\n    }\n    if(this.disabled === true) {\n      this.inputElement.setAttribute(\"disabled\", \"disabled\");\n    } else {\n      this.inputElement.removeAttribute(\"disabled\");\n    }\n  }\n  currencySymbolChanged() {\n    if(this.inputElement === undefined) {\n      return;\n    }\n    this.validate();\n  }\n  attached() {\n    this.dataChanged();\n    this.disabledChanged();\n  }\n\n  // method to format number to formatted string\n  format(number:number) {\n    if(this.currencySymbol === true) {\n      return new Intl.NumberFormat(\"en-US\", {style: \"currency\", currency: \"USD\"}).format(number);\n    } else {\n      return new Intl.NumberFormat(\"en-US\", {style: \"decimal\", minimumIntegerDigits: 1, minimumFractionDigits: 2, maximumFractionDigits: 2}).format(number);\n    }\n  }\n\n  // method to return numerical value of formatted string\n  unformat(string:string) {\n    return parseFloat(string.replace(InputCurrency.nonNumericRegex, \"\"));\n  }\n\n  // method to check if enter key has been pressed\n  checkIfEnter(event) {\n    if(event.which === 13) {\n      this.updateInternal();\n    }\n  }\n\n  // method to validate input; effectively a value converter\n  validate() {\n    // get selection start before (counts number of numerical numbers before)\n    let selectionStart = this.inputElement.selectionStart - (this.inputElement.value.slice(0, this.inputElement.selectionStart).match(InputCurrency.nonNumericRegex) || []).length;\n\n    // strip of extra formatting with some regex (sorry!)\n    let numericValue = this.unformat(this.inputElement.value);\n\n    // if errorenous (if only non-numerical/no input)\n    if(isNaN(numericValue)) {\n      this.error = true;\n      this.inputElement.value = \"\";\n    } else {\n\n      // set maximum magnitude to 1 trillion / negative 1 trillion (avoid loss of precision)\n      if(numericValue > 1e12) {\n        numericValue = 1e12;\n      }\n      if(numericValue < -1e12) {\n        numericValue = -1e12;\n      }\n\n      // manually refresh this.externalValue to get one-way binding to refresh; probably not the best way\n      this.externalValue = \"\";\n\n      // set externalValue\n      this.externalValue = this.format(numericValue);\n      this.error = false;\n\n      // mimic binding (necessary for cursor reset to work properly)\n      this.inputElement.value = this.externalValue; \n\n      // set cursor back accurately\n      let selectionStartWithSymbols = 0;\n      while(selectionStart > 0) {\n        if(InputCurrency.nonNumericRegex.exec(this.externalValue.charAt(selectionStartWithSymbols++)) === null) {\n          selectionStart--;\n        }\n        if(selectionStartWithSymbols >= this.externalValue.length) {\n          break;\n        }\n      }\n      this.inputElement.setSelectionRange(selectionStartWithSymbols, selectionStartWithSymbols);\n    }\n  }\n\n  // method to update internal variable on blur event\n  updateInternal() {\n\n    // if no error then set internal value to external value\n    if(!this.error) {\n      this.data = this.unformat(this.externalValue);\n\n    // if error then set external value to internal value\n    } else {\n      this.inputElement.value = this.format(this.data);\n      this.validate();\n    }\n  }\n\n}\n","import {bindable, customElement} from \"aurelia-framework\";\n\n@customElement(\"au-input-date\")\nexport class InputDate {\n\n  dateObject:Date = new Date();\n  @bindable dateString:string = this.dateObject.toJSON().slice(0, 10);\n  dateMMDDYYYY:string;\n  dateDDMM:string;\n  dateYYYY:string;\n\n  dateStringChanged(newValue, oldValue) {\n    this.dateObject = new Date(newValue);\n\n    let dateMMDDYYYYOptions = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    let dateDDMMOptions = {\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    let dateYYYYOptions = {\n      year: \"numeric\"\n    };\n\n    this.dateMMDDYYYY = new Intl.DateTimeFormat(\"en-US\", dateMMDDYYYYOptions).format(this.dateObject);\n    let dateDDMMParts = new Intl.DateTimeFormat(\"en-US\", dateDDMMOptions).format(this.dateObject);\n    this.dateDDMM = dateDDMMParts.slice(3, 5) + \" \" + dateDDMMParts.slice(0, 2);\n    this.dateYYYY = new Intl.DateTimeFormat(\"en-US\", dateYYYYOptions).format(this.dateObject);\n  }\n\n  constructor() {\n    this.dateStringChanged(this.dateString, null);\n  }\n\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null],"sourceRoot":"../src"}