{"version":3,"sources":["app.ts","environment.ts","main.ts","au-components/di-experiment.ts","au-components/input-currency.ts","au-components/input-date.ts","resources/index.ts","/home/jon/Documents/github/aurelia-training/experiment-components/src/app.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/di-experiment.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/input-currency.html","/home/jon/Documents/github/aurelia-training/experiment-components/src/au-components/input-date.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  whenPaid:Date = new Date();\n  amountPaid:number = 237.47;\n\n  testDataItem:string = \"TEST DEPENDENCY INJECTION\";\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {customElement, inject} from \"aurelia-framework\";\nimport {App} from \"../app\";\n\n@customElement(\"au-di-experiment\")\n@inject(App)\nexport class DiExperiment {\n  formattedTestDataItem:string;\n\n  constructor(public app:App) {\n    this.formattedTestDataItem = \"*** \" + this.app.testDataItem + \" ***\";\n  }\n}\n","import {bindable, customElement} from \"aurelia-framework\";\n\n@customElement(\"au-input-currency\")\nexport class InputCurrency {\n  \n  @bindable unformattedValue = 3426.1179;\n  formattedValue:string;\n\n  unformattedValueChanged(newValue, oldValue) {\n    this.formattedValue = new Intl.NumberFormat(\"en-US\", {style: \"currency\", currency: \"USD\"}).format(newValue.toString());\n  }\n\n  updateUnformattedValue() {\n    let unformattedNumber = this.formattedValue.replace(/[\\,\\$]/g, \"\");\n    if(/^\\d+(\\.\\d+)?$/.exec(unformattedNumber) !== null) {\n      this.unformattedValue = parseFloat(unformattedNumber);\n    } else {\n      this.unformattedValueChanged(this.unformattedValue, null);\n    }\n  }\n\n  constructor() {\n    this.unformattedValueChanged(this.unformattedValue, null);\n  }\n  \n}\n","import {bindable, customElement} from \"aurelia-framework\";\n\n@customElement(\"au-input-date\")\nexport class InputDate {\n\n  dateObject:Date = new Date();\n  @bindable dateString:string = this.dateObject.toJSON().slice(0, 10);\n  dateMMDDYYYY:string;\n  dateDDMM:string;\n  dateYYYY:string;\n\n  dateStringChanged(newValue, oldValue) {\n    this.dateObject = new Date(newValue);\n\n    let dateMMDDYYYYOptions = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    let dateDDMMOptions = {\n      month: \"2-digit\",\n      day: \"2-digit\"\n    };\n    let dateYYYYOptions = {\n      year: \"numeric\"\n    };\n\n    this.dateMMDDYYYY = new Intl.DateTimeFormat(\"en-US\", dateMMDDYYYYOptions).format(this.dateObject);\n    let dateDDMMParts = new Intl.DateTimeFormat(\"en-US\", dateDDMMOptions).formatToParts(this.dateObject);\n    this.dateDDMM = dateDDMMParts[2].value + \" \" + dateDDMMParts[0].value;\n    this.dateYYYY = new Intl.DateTimeFormat(\"en-US\", dateYYYYOptions).format(this.dateObject);\n  }\n\n  constructor() {\n    this.dateStringChanged(this.dateString, null);\n  }\n\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null],"sourceRoot":"../src"}